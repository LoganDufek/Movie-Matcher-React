{"version":3,"sources":["components/Header/index.js","components/ActorSearch/index.js","components/MovieSearch/index.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["Header","ActorSearch","useState","actorOne","setActorOne","actorTwo","setActorTwo","card","setCard","images","setImages","filmArray1","filmArray2","finalResults","img","map","image","className","src","layout","Item","label","name","placeholder","onChange","event","value","target","console","log","type","onClick","fetch","then","response","json","ActorID","results","imdb_id","i","length","includes","title","push","j","matchedMovie","Search","Poster","catch","err","error","checkSecondActor","MovieSearch","movie","setMovie","year","setYear","gross","setGross","director","setDirector","starActors","setStarActors","rottenTomatoes","setRottenTomatoes","posterForMovie","setPosterForMovie","Year","Director","BoxOffice","Actors","Ratings","Value","HomePage","bordered","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAYeA,MAVf,WAEI,OAEI,8E,kCCkNOC,MApNf,WAEI,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEA,EAAwBJ,qBAAxB,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAA4BN,mBAAS,IAArC,mBAAOO,EAAP,KAAeC,EAAf,KAsBIC,EAAa,GACbC,EAAa,GACbC,EAAe,GAmJfC,EAAML,EAAOM,KAAI,SAAUC,GAC3B,OAAQ,qBAAKC,UAAU,eAAeC,IAAKF,OAI/C,OACI,gCAEI,eAAC,IAAD,CAAMC,UAAU,aAEZE,OAAO,aAFX,UAGI,mFACA,cAAC,IAAKC,KAAN,IAGA,cAAC,IAAKA,KAAN,CAAWC,MAAM,cAAcC,KAAK,WAAWL,UAAU,cAAzD,SACI,cAAC,IAAD,CAAOA,UAAU,YAAYM,YAAY,gBAAgBC,SAzLnD,SAAAC,GAClB,IAAQC,EAAUD,EAAME,OAAhBD,MAERtB,EAAYsB,GAGZE,QAAQC,IAAI1B,QAqLJ,cAAC,IAAKiB,KAAN,CAAWC,MAAM,eAAeC,KAAK,WAAWL,UAAU,cAA1D,SACI,cAAC,IAAD,CAAOA,UAAU,YAAYM,YAAY,gBAAgBC,SAlLnD,SAAAC,GAClB,IAAQC,EAAUD,EAAME,OAAhBD,MAGRpB,EAAYoB,GAGZE,QAAQC,IAAIxB,QA6KJ,cAAC,IAAKe,KAAN,UACI,wBAAQH,UAAU,eAAea,KAAK,UAAUC,QArKhE,WAEIvB,EAAQ,QACRE,EAAU,IAEVsB,MAAM,0DAA4D7B,EAAW,IAAK,CAC9E,OAAU,MACV,QAAW,CACP,iBAAkB,qDAClB,kBAAmB,+BAExB8B,MAAK,SAAUC,GACd,OAAOA,EAASC,UAGfF,MAAK,SAAUC,GACZN,QAAQC,IAAIK,GACZ,IAAIE,EAAUF,EAASG,QAAQ,GAAGC,QAGlCN,MAAM,8CAAgDI,EAAU,cAAe,CAC3E,OAAU,MACV,QAAW,CACP,iBAAkB,qDAClB,kBAAmB,+BAExBH,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAGfF,MAAK,SAAUC,GACZN,QAAQC,IAAIK,GACZ,IAAK,IAAIK,EAAI,EAAGA,EAAIL,EAASG,QAAQG,OAAQD,KACiB,IAAtD5B,EAAW8B,SAASP,EAASG,QAAQE,GAAG,GAAGG,QAC3C/B,EAAWgC,KAAKT,EAASG,QAAQE,GAAG,GAAGG,QAgBnE,SAA0BrC,GAItB2B,MAAM,0DAA4D3B,EAAW,IAAK,CAC9E,OAAU,MACV,QAAW,CACP,iBAAkB,qDAClB,kBAAmB,+BAGtB4B,MAAK,SAAUC,GACZ,OAAOA,EAASC,UAInBF,MAAK,SAAUC,GACZ,IAAIE,EAAUF,EAASG,QAAQ,GAAGC,QAClCV,QAAQC,IAAIK,GAGZF,MAAM,8CAAgDI,EAAU,cAAe,CAC3E,OAAU,MACV,QAAW,CACP,iBAAkB,qDAClB,kBAAmB,+BAGtBH,MAAK,SAAAC,GACF,OAAOA,EAASC,UAGnBF,MAAK,SAAUC,GAEZ,IAAK,IAAIK,EAAI,EAAGA,EAAIL,EAASG,QAAQG,OAAQD,KACiB,IAAtD3B,EAAW6B,SAASP,EAASG,QAAQE,GAAG,GAAGG,QAC3C9B,EAAW+B,KAAKT,EAASG,QAAQE,GAAG,GAAGG,OAK/C,IAAK,IAAIE,EAAI,EAAGA,EAAIhC,EAAW4B,OAAQI,IAE/BjC,EAAW8B,SAAS7B,EAAWgC,IAC/B/B,EAAa8B,KAAK/B,EAAWgC,IAG7BhB,QAAQC,IAAI,YAcpB,IAXAD,QAAQC,IAAIlB,GACZiB,QAAQC,IAAIjB,GACZgB,QAAQC,IAAIhB,GAERA,EAAa2B,OAOZD,EAAI,EAAGA,EAAI1B,EAAa2B,OAAQD,IAAK,CACtC,IAAMM,EAAehC,EAAa0B,GAIlCP,MAAM,8BAAgCa,EAAe,oBAChDZ,MAAK,SAAUC,GACZ,OAAOA,EAASC,UAEnBF,MAAK,SAAUC,GAGZxB,GAAU,SAAAD,GAAM,4BAAQA,GAAR,CAAgByB,EAASY,OAAO,GAAGC,eAO5DnB,QAAQC,IAAIpB,SAG1BuC,OAAM,SAAAC,GACHrB,QAAQsB,MAAMD,MAjGJE,CAAiB9C,MACpB2C,OAAM,SAAAC,GACLrB,QAAQsB,MAAMD,SAGzBD,OAAM,SAAAC,GACHrB,QAAQsB,MAAMD,OA0HV,0BAGN1C,EACE,qBAAKU,UAAU,mBAAf,SACKH,IAFA,4B,SCnHNsC,MAxFf,WAEI,MAA0BlD,mBAAS,IAAnC,mBAAOmD,EAAP,KAAcC,EAAd,KACA,EAAwBpD,mBAAS,IAAjC,mBAAOqD,EAAP,KAAaC,EAAb,KACA,EAA0BtD,mBAAS,IAAnC,mBAAOuD,EAAP,KAAcC,EAAd,KACA,EAAgCxD,mBAAS,IAAzC,mBAAOyD,EAAP,KAAiBC,EAAjB,KACA,EAAoC1D,mBAAS,IAA7C,mBAAO2D,EAAP,KAAmBC,EAAnB,KACA,EAA4C5D,mBAAS,IAArD,mBAAO6D,EAAP,KAAuBC,EAAvB,KACA,EAA4C9D,mBAAS,IAArD,mBAAO+D,EAAP,KAAuBC,EAAvB,KAsCA,OACI,gCAEI,eAAC,IAAD,CAAMjD,UAAU,aAEZE,OAAO,aAFX,UAGI,2DACA,cAAC,IAAKC,KAAN,IAGA,cAAC,IAAKA,KAAN,CAAWE,KAAK,QAAQL,UAAU,cAAlC,SACI,cAAC,IAAD,CAAOA,UAAU,YAAYM,YAAY,iBAAiBC,SA/CtD,SAAAC,GAChB,IAAQC,EAAUD,EAAME,OAAhBD,MAER4B,EAAS5B,GAGTE,QAAQC,IAAIwB,QA2CJ,cAAC,IAAKjC,KAAN,UACI,wBAAQH,UAAU,eAAea,KAAK,UAAUC,QAxChE,WAIIC,MACI,8BAAgCqB,EAAQ,oBAEvCpB,MAAK,SAAUC,GACZ,OAAOA,EAASC,UAEnBF,MAAK,SAAUC,GAEZN,QAAQC,IAAIK,GAEZsB,EAAQtB,EAASiC,MACjBP,EAAY1B,EAASkC,UACrBV,EAASxB,EAASmC,WAClBP,EAAc5B,EAASoC,QACvBN,EAAkB,2BAAS9B,EAASqC,QAAQ,GAAGC,MAAQ,4BACvDN,EAAkBhC,EAASa,YAqBvB,0BAGNQ,EACE,sBAAKtC,UAAU,aAAf,UACI,qBAAKC,IAAK+C,IACV,gDACoBV,KAEpB,8CACkBI,KAElB,sDAC0BF,KAE1B,2CACeI,KAEf,iDACqBE,QAhBpB,4BCtCNU,MAvBf,WAGI,OACI,iCAEI,cAAC,IAAD,CAAMxD,UAAU,kBAAkByD,UAAU,EAA5C,SACI,cAAC,EAAD,MAIJ,cAAC,IAAD,CAAMzD,UAAU,kBAAkByD,UAAU,EAA5C,SACI,cAAC,EAAD,UCDDC,MAZf,WACE,OACE,sBAAK1D,UAAU,MAAf,UACE,cAAC,EAAD,CAAQA,UAAU,eAIlB,cAAC,EAAD,QCCS2D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7C,MAAK,YAAkD,IAA/C8C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.92696220.chunk.js","sourcesContent":["import react from \"react\";\r\n\r\nfunction Header() {\r\n\r\n    return (\r\n\r\n        <header> Movie Matcher! Find Their Shared Flix </header>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Header;","import { React, useState } from 'react';\r\nimport { Form, Input, Button, Radio } from 'antd';\r\n\r\n\r\nfunction ActorSearch() {\r\n\r\n    const [actorOne, setActorOne] = useState('');\r\n    const [actorTwo, setActorTwo] = useState('');\r\n    const moviePoster = []\r\n    const [card, setCard] = useState()\r\n    const [images, setImages] = useState([])\r\n\r\n    const handleChange1 = event => {\r\n        const { value } = event.target;\r\n\r\n        setActorOne(value)\r\n\r\n\r\n        console.log(actorOne)\r\n\r\n    };\r\n\r\n    const handleChange2 = event => {\r\n        const { value } = event.target;\r\n\r\n\r\n        setActorTwo(value)\r\n\r\n\r\n        console.log(actorTwo)\r\n    };\r\n\r\n    var filmArray1 = [];\r\n    var filmArray2 = [];\r\n    var finalResults = [];\r\n\r\n\r\n\r\n    function searchActors() {\r\n        //user responses, set as defined strings currently but will be set to take in values based on what the user types in\r\n        setCard('True')\r\n        setImages([])\r\n        //inital fetch request for the first actor, retrieves Imdb ID data to then be used \r\n        fetch(\"https://data-imdb1.p.rapidapi.com/actor/imdb_id_byName/\" + actorOne + \"/\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-key\": \"1d90df3750mshd40006f295ac708p1a17dajsn87556815a8fb\",\r\n                \"x-rapidapi-host\": \"data-imdb1.p.rapidapi.com\",\r\n            }\r\n        }).then(function (response) {\r\n            return response.json();\r\n        })\r\n            //taking that initial fetch, logging data as a variable and then passing it to the next fetch request\r\n            .then(function (response) {\r\n                console.log(response)\r\n                let ActorID = response.results[0].imdb_id\r\n\r\n\r\n                fetch(\"https://data-imdb1.p.rapidapi.com/actor/id/\" + ActorID + \"/all_roles/\", {\r\n                    \"method\": \"GET\",\r\n                    \"headers\": {\r\n                        \"x-rapidapi-key\": \"1d90df3750mshd40006f295ac708p1a17dajsn87556815a8fb\",\r\n                        \"x-rapidapi-host\": \"data-imdb1.p.rapidapi.com\"\r\n                    }\r\n                }).then(response => {\r\n                    return response.json();\r\n                })\r\n                    //build an array from the desired data for the first actor, to be checked with the next array\r\n                    .then(function (response) {\r\n                        console.log(response)\r\n                        for (var i = 0; i < response.results.length; i++) {\r\n                            if (filmArray1.includes(response.results[i][0].title) === false) {\r\n                                filmArray1.push(response.results[i][0].title)\r\n\r\n                            }\r\n                        } checkSecondActor(actorTwo);\r\n                    }).catch(err => {\r\n                        console.error(err);\r\n                    });\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n                // var noPoster = document.createElement(\"img\")\r\n                // noPoster.setAttribute(\"src\", \"./assets/images/MovieMongoose2.png\")\r\n                // posterDisplay.appendChild(noPoster)\r\n            });\r\n    }\r\n\r\n    function checkSecondActor(actorTwo) {\r\n\r\n\r\n        //Second series of fetch requests for the second entered actor\r\n        fetch(\"https://data-imdb1.p.rapidapi.com/actor/imdb_id_byName/\" + actorTwo + \"/\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-key\": \"1d90df3750mshd40006f295ac708p1a17dajsn87556815a8fb\",\r\n                \"x-rapidapi-host\": \"data-imdb1.p.rapidapi.com\",\r\n            }\r\n        })\r\n            .then(function (response) {\r\n                return response.json();\r\n            })\r\n\r\n            //same as the previous fetch request where we store the relevant data to then be used\r\n            .then(function (response) {\r\n                let ActorID = response.results[0].imdb_id\r\n                console.log(response)\r\n\r\n\r\n                fetch(\"https://data-imdb1.p.rapidapi.com/actor/id/\" + ActorID + \"/all_roles/\", {\r\n                    \"method\": \"GET\",\r\n                    \"headers\": {\r\n                        \"x-rapidapi-key\": \"1d90df3750mshd40006f295ac708p1a17dajsn87556815a8fb\",\r\n                        \"x-rapidapi-host\": \"data-imdb1.p.rapidapi.com\"\r\n                    }\r\n                })\r\n                    .then(response => {\r\n                        return response.json();\r\n                    })\r\n                    //build an array from the desired data for the second actor, to be checked with the first array\r\n                    .then(function (response) {\r\n\r\n                        for (var i = 0; i < response.results.length; i++) {\r\n                            if (filmArray2.includes(response.results[i][0].title) === false) {\r\n                                filmArray2.push(response.results[i][0].title)\r\n\r\n                            }\r\n                        }\r\n                        //pushes the films the two actors have in common to a new array\r\n                        for (var j = 0; j < filmArray2.length; j++) {\r\n\r\n                            if (filmArray1.includes(filmArray2[j])) {\r\n                                finalResults.push(filmArray2[j])\r\n                            }\r\n                            else {\r\n                                console.log(\"no match\")\r\n                            }\r\n                        }\r\n                        console.log(filmArray1)\r\n                        console.log(filmArray2)\r\n                        console.log(finalResults)\r\n\r\n                        if (finalResults.length === 0) {\r\n\r\n                            // var noPoster = document.createElement(\"img\")\r\n                            // noPoster.setAttribute(\"src\", \"./assets/images/MovieMongoose.png\")\r\n                            // posterDisplay.appendChild(noPoster)\r\n                        }\r\n                        //for loop to iterate through this created array and retrieve the poster data from a new API\r\n                        for (i = 0; i < finalResults.length; i++) {\r\n                            const matchedMovie = finalResults[i]\r\n\r\n\r\n\r\n                            fetch(\"https://www.omdbapi.com/?s=\" + matchedMovie + \"&apikey=d86e2804\")\r\n                                .then(function (response) {\r\n                                    return response.json();\r\n                                })\r\n                                .then(function (response) {\r\n\r\n\r\n                                    setImages(images => [...images, response.Search[0].Poster])\r\n\r\n\r\n\r\n                                });\r\n\r\n\r\n                        }; console.log(images)\r\n                    })\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n\r\n                // var noPoster = document.createElement(\"img\")\r\n                // noPoster.setAttribute(\"src\", \"./assets/images/MovieMongoose2.png\")\r\n                // posterDisplay.appendChild(noPoster)\r\n            });\r\n    }\r\n\r\n\r\n    var img = images.map(function (image) {\r\n        return (<img className=\"movie-poster\" src={image} />);\r\n    });\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Form className=\"actor-form\"\r\n\r\n                layout=\"horizontal\">\r\n                <p> Enter the Names of the Actors you want to Compare</p>\r\n                <Form.Item  >\r\n\r\n                </Form.Item>\r\n                <Form.Item label=\"First Actor\" name=\"actorOne\" className=\"actor-label\">\r\n                    <Input className=\"actor-one\" placeholder=\"eg. Tom Hanks\" onChange={handleChange1} />\r\n                </Form.Item>\r\n                <Form.Item label=\"Second Actor\" name=\"actorTwo\" className=\"actor-label\">\r\n                    <Input className=\"actor-one\" placeholder=\"eg. Tim Allen\" onChange={handleChange2} />\r\n                </Form.Item>\r\n                <Form.Item >\r\n                    <button className=\"actor-button\" type=\"primary\" onClick={searchActors}>Search!</button>\r\n                </Form.Item>\r\n            </Form>\r\n            {!card ? <div></div> :\r\n                <div className=\"poster-container\">\r\n                    {img}\r\n                </div>\r\n            }\r\n        </div >\r\n    )\r\n\r\n}\r\n\r\nexport default ActorSearch;","import { React, useState } from 'react';\r\nimport { Form, Input, Button, Radio } from 'antd';\r\n\r\nfunction MovieSearch() {\r\n\r\n    const [movie, setMovie] = useState('');\r\n    const [year, setYear] = useState('');\r\n    const [gross, setGross] = useState('');\r\n    const [director, setDirector] = useState('');\r\n    const [starActors, setStarActors] = useState('');\r\n    const [rottenTomatoes, setRottenTomatoes] = useState('');\r\n    const [posterForMovie, setPosterForMovie] = useState('');\r\n\r\n    const handleMovie = event => {\r\n        const { value } = event.target;\r\n\r\n        setMovie(value)\r\n\r\n\r\n        console.log(movie)\r\n\r\n    };\r\n\r\n    function getMovieInfo() {\r\n\r\n\r\n\r\n        fetch(\r\n            \"https://www.omdbapi.com/?t=\" + movie + \"&apikey=d86e2804\"\r\n        )\r\n            .then(function (response) {\r\n                return response.json();\r\n            })\r\n            .then(function (response) {\r\n\r\n                console.log(response)\r\n\r\n                setYear(response.Year)\r\n                setDirector(response.Director)\r\n                setGross(response.BoxOffice)\r\n                setStarActors(response.Actors)\r\n                setRottenTomatoes('🍅🍅' + response.Ratings[1].Value + '🍅🍅')\r\n                setPosterForMovie(response.Poster)\r\n\r\n            })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Form className=\"actor-form\"\r\n\r\n                layout=\"horizontal\">\r\n                <p> Find Info About a Movie! </p>\r\n                <Form.Item  >\r\n\r\n                </Form.Item>\r\n                <Form.Item name=\"movie\" className=\"movie-label\">\r\n                    <Input className=\"movie-one\" placeholder=\"eg. The Matrix\" onChange={handleMovie} />\r\n                </Form.Item>\r\n                <Form.Item >\r\n                    <button className=\"actor-button\" type=\"primary\" onClick={getMovieInfo}>Search!</button>\r\n                </Form.Item>\r\n            </Form>\r\n            {!year ? <div></div> :\r\n                <div className=\"movie-info\">\r\n                    <img src={posterForMovie}></img>\r\n                    <p>\r\n                        Year Released: {year}\r\n                    </p>\r\n                    <p>\r\n                        Directed By: {director}\r\n                    </p>\r\n                    <p>\r\n                        Domestic Box Office: {gross}\r\n                    </p>\r\n                    <p>\r\n                        Starring: {starActors}\r\n                    </p>\r\n                    <p>\r\n                        Rotten Tomates: {rottenTomatoes}\r\n                    </p>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieSearch;\r\n","import { React, useState } from 'react';\r\nimport ActorSearch from '../components/ActorSearch';\r\nimport { Card } from 'antd';\r\nimport MovieSearch from '../components/MovieSearch';\r\n\r\nfunction HomePage() {\r\n\r\n\r\n    return (\r\n        <main>\r\n\r\n            <Card className=\"actor-container\" bordered={true} >\r\n                <ActorSearch></ActorSearch>\r\n\r\n            </Card>\r\n\r\n            <Card className=\"actor-container\" bordered={true} >\r\n                <MovieSearch></MovieSearch>\r\n\r\n            </Card>\r\n\r\n\r\n\r\n        </main >\r\n    )\r\n\r\n}\r\n\r\nexport default HomePage;","import './App.css';\nimport Header from './components/Header';\nimport HomePage from './pages/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header className=\"App-header\">\n\n      </Header>\n\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}